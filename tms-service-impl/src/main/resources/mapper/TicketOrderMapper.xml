<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.tms.mapper.TicketOrderMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.tms.entity.TicketOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ticket_order_num" jdbcType="VARCHAR" property="ticketOrderNum" />
    <result column="ticket_id" jdbcType="INTEGER" property="ticketId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="ticket_store_id" jdbcType="INTEGER" property="ticketStoreId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="ticket_order_type" jdbcType="VARCHAR" property="ticketOrderType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ticket_order_num, ticket_id, customer_id, ticket_store_id, price, ticket_order_type, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.tms.entity.TicketOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.tms.entity.TicketOrderExample">
    delete from ticket_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.tms.entity.TicketOrder">
    insert into ticket_order (id, ticket_order_num, ticket_id, 
      customer_id, ticket_store_id, price, 
      ticket_order_type, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{ticketOrderNum,jdbcType=VARCHAR}, #{ticketId,jdbcType=INTEGER}, 
      #{customerId,jdbcType=INTEGER}, #{ticketStoreId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{ticketOrderType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.tms.entity.TicketOrder">
    insert into ticket_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ticketOrderNum != null">
        ticket_order_num,
      </if>
      <if test="ticketId != null">
        ticket_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="ticketStoreId != null">
        ticket_store_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="ticketOrderType != null">
        ticket_order_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ticketOrderNum != null">
        #{ticketOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketId != null">
        #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="ticketStoreId != null">
        #{ticketStoreId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="ticketOrderType != null">
        #{ticketOrderType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.tms.entity.TicketOrderExample" resultType="java.lang.Long">
    select count(*) from ticket_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ticketOrderNum != null">
        ticket_order_num = #{record.ticketOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketId != null">
        ticket_id = #{record.ticketId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketStoreId != null">
        ticket_store_id = #{record.ticketStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.ticketOrderType != null">
        ticket_order_type = #{record.ticketOrderType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket_order
    set id = #{record.id,jdbcType=INTEGER},
      ticket_order_num = #{record.ticketOrderNum,jdbcType=VARCHAR},
      ticket_id = #{record.ticketId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      ticket_store_id = #{record.ticketStoreId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      ticket_order_type = #{record.ticketOrderType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.tms.entity.TicketOrder">
    update ticket_order
    <set>
      <if test="ticketOrderNum != null">
        ticket_order_num = #{ticketOrderNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketId != null">
        ticket_id = #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="ticketStoreId != null">
        ticket_store_id = #{ticketStoreId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="ticketOrderType != null">
        ticket_order_type = #{ticketOrderType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.tms.entity.TicketOrder">
    update ticket_order
    set ticket_order_num = #{ticketOrderNum,jdbcType=VARCHAR},
      ticket_id = #{ticketId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      ticket_store_id = #{ticketStoreId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      ticket_order_type = #{ticketOrderType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>