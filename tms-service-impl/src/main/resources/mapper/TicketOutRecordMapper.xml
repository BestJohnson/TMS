<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.tms.mapper.TicketOutRecordMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.tms.entity.TicketOutRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ticket_store" jdbcType="VARCHAR" property="ticketStore" />
    <result column="ticket_begin_num" jdbcType="VARCHAR" property="ticketBeginNum" />
    <result column="ticket_end_num" jdbcType="VARCHAR" property="ticketEndNum" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="total_num" jdbcType="INTEGER" property="totalNum" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ticket_store, ticket_begin_num, ticket_end_num, out_time, price, total_num, money, 
    state, account_name
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.tms.entity.TicketOutRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_out_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket_out_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket_out_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.tms.entity.TicketOutRecordExample">
    delete from ticket_out_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.tms.entity.TicketOutRecord">
    insert into ticket_out_record (id, ticket_store, ticket_begin_num, 
      ticket_end_num, out_time, price, 
      total_num, money, state, 
      account_name)
    values (#{id,jdbcType=INTEGER}, #{ticketStore,jdbcType=VARCHAR}, #{ticketBeginNum,jdbcType=VARCHAR}, 
      #{ticketEndNum,jdbcType=VARCHAR}, #{outTime,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL}, 
      #{totalNum,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, #{state,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.tms.entity.TicketOutRecord">
    insert into ticket_out_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ticketStore != null">
        ticket_store,
      </if>
      <if test="ticketBeginNum != null">
        ticket_begin_num,
      </if>
      <if test="ticketEndNum != null">
        ticket_end_num,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ticketStore != null">
        #{ticketStore,jdbcType=VARCHAR},
      </if>
      <if test="ticketBeginNum != null">
        #{ticketBeginNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketEndNum != null">
        #{ticketEndNum,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.tms.entity.TicketOutRecordExample" resultType="java.lang.Long">
    select count(*) from ticket_out_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket_out_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ticketStore != null">
        ticket_store = #{record.ticketStore,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketBeginNum != null">
        ticket_begin_num = #{record.ticketBeginNum,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketEndNum != null">
        ticket_end_num = #{record.ticketEndNum,jdbcType=VARCHAR},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.totalNum != null">
        total_num = #{record.totalNum,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket_out_record
    set id = #{record.id,jdbcType=INTEGER},
      ticket_store = #{record.ticketStore,jdbcType=VARCHAR},
      ticket_begin_num = #{record.ticketBeginNum,jdbcType=VARCHAR},
      ticket_end_num = #{record.ticketEndNum,jdbcType=VARCHAR},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DECIMAL},
      total_num = #{record.totalNum,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.tms.entity.TicketOutRecord">
    update ticket_out_record
    <set>
      <if test="ticketStore != null">
        ticket_store = #{ticketStore,jdbcType=VARCHAR},
      </if>
      <if test="ticketBeginNum != null">
        ticket_begin_num = #{ticketBeginNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketEndNum != null">
        ticket_end_num = #{ticketEndNum,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalNum != null">
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.tms.entity.TicketOutRecord">
    update ticket_out_record
    set ticket_store = #{ticketStore,jdbcType=VARCHAR},
      ticket_begin_num = #{ticketBeginNum,jdbcType=VARCHAR},
      ticket_end_num = #{ticketEndNum,jdbcType=VARCHAR},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      total_num = #{totalNum,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      state = #{state,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>